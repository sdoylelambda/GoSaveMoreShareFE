{"ast":null,"code":"// import axiosWithAuth from \"../util/axiosWithAuth\";\nimport { types } from './index';\nimport axiosRoute from '../util/axiosRoute';\nconst {\n  GET_INDIVIDUAL_PRODUCT_START,\n  GET_INDIVIDUAL_PRODUCT_SUCCESS,\n  GET_INDIVIDUAL_PRODUCT_FAIL,\n  GET_PRODUCTS_START,\n  GET_PRODUCTS_SUCCESS,\n  GET_PRODUCTS_FAIL,\n  ADD_PRODUCTS_START,\n  ADD_PRODUCTS_SUCCESS,\n  ADD_PRODUCTS_FAIL,\n  EDIT_PRODUCTS_START,\n  EDIT_PRODUCTS_SUCCESS,\n  EDIT_PRODUCTS_FAIL,\n  REQUEST_PRODUCT_START,\n  REQUEST_PRODUCT_SUCCESS,\n  REQUEST_PRODUCT_FAIL\n} = types;\nexport const getProduct = id => async dispatch => {\n  dispatch({\n    type: GET_INDIVIDUAL_PRODUCT_START\n  });\n\n  try {\n    const res = await axiosRoute().get(`/products/${id}`);\n    dispatch({\n      type: GET_INDIVIDUAL_PRODUCT_SUCCESS,\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    dispatch({\n      type: GET_INDIVIDUAL_PRODUCT_FAIL,\n      payload: err\n    });\n  }\n};\nexport const getProducts = () => async dispatch => {\n  dispatch({\n    type: GET_PRODUCTS_START\n  });\n\n  try {\n    const res = await axiosRoute().get('/products');\n    dispatch({\n      type: GET_PRODUCTS_SUCCESS,\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const addProducts = newProduct => async dispatch => {\n  dispatch({\n    type: ADD_PRODUCTS_START\n  });\n\n  try {\n    const res = await axiosRoute().post('/products', newProduct);\n    dispatch({\n      type: ADD_PRODUCTS_SUCCESS,\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    dispatch({\n      type: ADD_PRODUCTS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const editProducts = (productName, updatedData) => async dispatch => {\n  dispatch({\n    type: EDIT_PRODUCTS_START\n  });\n\n  try {\n    const res = await axiosRoute().put(`/products/${productName}`, updatedData);\n    dispatch({\n      type: EDIT_PRODUCTS_SUCCESS,\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    dispatch({\n      type: EDIT_PRODUCTS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const requestProduct = productRequest => async dispatch => {\n  dispatch({\n    type: REQUEST_PRODUCT_START\n  });\n\n  try {\n    const res = await axiosRoute().post('/requests', productRequest);\n    console.log('res: ROUTE:', res);\n    dispatch({\n      type: REQUEST_PRODUCT_SUCCESS,\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    dispatch({\n      type: REQUEST_PRODUCT_FAIL,\n      payload: err.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/redux/actions/productsActions.js"],"names":["types","axiosRoute","GET_INDIVIDUAL_PRODUCT_START","GET_INDIVIDUAL_PRODUCT_SUCCESS","GET_INDIVIDUAL_PRODUCT_FAIL","GET_PRODUCTS_START","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","ADD_PRODUCTS_START","ADD_PRODUCTS_SUCCESS","ADD_PRODUCTS_FAIL","EDIT_PRODUCTS_START","EDIT_PRODUCTS_SUCCESS","EDIT_PRODUCTS_FAIL","REQUEST_PRODUCT_START","REQUEST_PRODUCT_SUCCESS","REQUEST_PRODUCT_FAIL","getProduct","id","dispatch","type","res","get","payload","data","err","getProducts","message","addProducts","newProduct","post","editProducts","productName","updatedData","put","requestProduct","productRequest","console","log"],"mappings":"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","sourcesContent":["// import axiosWithAuth from \"../util/axiosWithAuth\";\nimport { types } from './index'\nimport axiosRoute from '../util/axiosRoute'\n\nconst {\n  GET_INDIVIDUAL_PRODUCT_START,\n  GET_INDIVIDUAL_PRODUCT_SUCCESS,\n  GET_INDIVIDUAL_PRODUCT_FAIL,\n  GET_PRODUCTS_START,\n  GET_PRODUCTS_SUCCESS,\n  GET_PRODUCTS_FAIL,\n  ADD_PRODUCTS_START,\n  ADD_PRODUCTS_SUCCESS,\n  ADD_PRODUCTS_FAIL,\n  EDIT_PRODUCTS_START,\n  EDIT_PRODUCTS_SUCCESS,\n  EDIT_PRODUCTS_FAIL,\n  REQUEST_PRODUCT_START,\n  REQUEST_PRODUCT_SUCCESS,\n  REQUEST_PRODUCT_FAIL,\n} = types\n\nexport const getProduct = (id) => async (dispatch) => {\n  dispatch({ type: GET_INDIVIDUAL_PRODUCT_START })\n  try {\n    const res = await axiosRoute().get(`/products/${id}`)\n    dispatch({ type: GET_INDIVIDUAL_PRODUCT_SUCCESS, payload: res.data })\n    return res\n  } catch (err) {\n    dispatch({ type: GET_INDIVIDUAL_PRODUCT_FAIL, payload: err })\n  }\n}\n\nexport const getProducts = () => async (dispatch) => {\n  dispatch({ type: GET_PRODUCTS_START })\n  try {\n    const res = await axiosRoute().get('/products')\n    dispatch({ type: GET_PRODUCTS_SUCCESS, payload: res.data })\n    return res\n  } catch (err) {\n    dispatch({ type: GET_PRODUCTS_FAIL, payload: err.message })\n  }\n}\n\nexport const addProducts = (newProduct) => async (dispatch) => {\n  dispatch({ type: ADD_PRODUCTS_START })\n  try {\n    const res = await axiosRoute().post('/products', newProduct)\n    dispatch({ type: ADD_PRODUCTS_SUCCESS, payload: res.data })\n    return res\n  } catch (err) {\n    dispatch({ type: ADD_PRODUCTS_FAIL, payload: err.message })\n  }\n}\n\nexport const editProducts = (productName, updatedData) => async (dispatch) => {\n  dispatch({ type: EDIT_PRODUCTS_START })\n  try {\n    const res = await axiosRoute().put(`/products/${productName}`, updatedData)\n    dispatch({ type: EDIT_PRODUCTS_SUCCESS, payload: res.data })\n    return res\n  } catch (err) {\n    dispatch({ type: EDIT_PRODUCTS_FAIL, payload: err.message })\n  }\n}\n\nexport const requestProduct = (productRequest) => async (dispatch) => {\n  dispatch({ type: REQUEST_PRODUCT_START })\n  try {\n    const res = await axiosRoute().post('/requests', productRequest)\n    console.log('res: ROUTE:', res)\n    dispatch({ type: REQUEST_PRODUCT_SUCCESS, payload: res.data })\n    return res\n  } catch (err) {\n    dispatch({ type: REQUEST_PRODUCT_FAIL, payload: err.message })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}