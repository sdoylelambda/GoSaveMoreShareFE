{"ast":null,"code":"var _jsxFileName = \"/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/components/CheckOutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\nimport BillingDetailsFields from './BillingDetails';\nimport { Button } from 'react-materialize';\nimport CheckoutError from './CheckoutError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutForm = _ref => {\n  _s();\n\n  let {\n    totalPrice,\n    onSuccessfulCheckout\n  } = _ref;\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n  const stripe = useStripe();\n  const elements = useElements(); // TIP\n  // use the cardElements onChange prop to add a handler\n  // for setting any errors:\n\n  const handleCardDetailsChange = ev => {\n    ev.error ? setCheckoutError(ev.error.message) : setCheckoutError();\n  };\n\n  const handleFormSubmit = async ev => {\n    ev.preventDefault();\n    const billingDetails = {\n      name: ev.target.name.value,\n      email: ev.target.email.value,\n      address: {\n        city: ev.target.city.value,\n        line1: ev.target.address.value,\n        state: ev.target.state.value,\n        postal_code: ev.target.zip.value\n      }\n    };\n    setProcessingTo(true);\n    const cardElement = elements.getElement('card');\n\n    try {\n      const {\n        data: clientSecret\n      } = await axios.post('https://gosavemore.herokuapp.com/checkout/', {\n        amount: totalPrice * 100\n      });\n      const paymentMethodReq = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n        billing_details: billingDetails\n      });\n\n      if (paymentMethodReq.error) {\n        setCheckoutError(paymentMethodReq.error.message);\n        setProcessingTo(false);\n        return;\n      }\n\n      const {\n        error\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: paymentMethodReq.paymentMethod.id\n      });\n\n      if (error) {\n        setCheckoutError(error.message);\n        setProcessingTo(false);\n        return;\n      }\n\n      onSuccessfulCheckout();\n    } catch (err) {\n      setCheckoutError(err.message);\n    }\n  }; // Learning\n  // A common ask/bug that users run into is:\n  // How do you change the color of the card element input text?\n  // How do you change the font-size of the card element input text?\n  // How do you change the placeholder color?\n  // The answer to all of the above is to use the `style` option.\n  // It's common to hear users confused why the card element appears impervious\n  // to all their styles. No matter what classes they add to the parent element\n  // nothing within the card element seems to change. The reason for this is that\n  // the card element is housed within an iframe and:\n  // > styles do not cascade from a parent window down into its iframes\n\n\n  const iframeStyles = {\n    base: {\n      color: '#000',\n      fontSize: '16px',\n      iconColor: '#fff',\n      '::placeholder': {\n        color: '#87bbfd'\n      }\n    },\n    invalid: {\n      iconColor: '#000',\n      color: '#000'\n    },\n    complete: {\n      iconColor: '#000'\n    }\n  };\n  const cardElementOpts = {\n    iconStyle: 'solid',\n    style: iframeStyles,\n    hidePostalCode: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BillingDetailsFields, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CardElement, {\n          options: cardElementOpts,\n          onChange: handleCardDetailsChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), checkoutError && /*#__PURE__*/_jsxDEV(CheckoutError, {\n      children: checkoutError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: isProcessing || !stripe,\n        children: isProcessing ? 'Processing...' : `Pay $${totalPrice}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"2xw3RUxwBWLOQjltidPO4c7nnLg=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","axios","BillingDetailsFields","Button","CheckoutError","CheckoutForm","totalPrice","onSuccessfulCheckout","isProcessing","setProcessingTo","checkoutError","setCheckoutError","stripe","elements","handleCardDetailsChange","ev","error","message","handleFormSubmit","preventDefault","billingDetails","name","target","value","email","address","city","line1","state","postal_code","zip","cardElement","getElement","data","clientSecret","post","amount","paymentMethodReq","createPaymentMethod","type","card","billing_details","confirmCardPayment","payment_method","paymentMethod","id","err","iframeStyles","base","color","fontSize","iconColor","invalid","complete","cardElementOpts","iconStyle","style","hidePostalCode","paddingTop"],"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/components/CheckOutForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\nimport axios from 'axios'\n\nimport BillingDetailsFields from './BillingDetails'\nimport { Button } from 'react-materialize'\nimport CheckoutError from './CheckoutError'\n\nconst CheckoutForm = ({ totalPrice, onSuccessfulCheckout }) => {\n  const [isProcessing, setProcessingTo] = useState(false)\n  const [checkoutError, setCheckoutError] = useState()\n\n  const stripe = useStripe()\n  const elements = useElements()\n\n  // TIP\n  // use the cardElements onChange prop to add a handler\n  // for setting any errors:\n\n  const handleCardDetailsChange = (ev) => {\n    ev.error ? setCheckoutError(ev.error.message) : setCheckoutError()\n  }\n\n  const handleFormSubmit = async (ev) => {\n    ev.preventDefault()\n\n    const billingDetails = {\n      name: ev.target.name.value,\n      email: ev.target.email.value,\n      address: {\n        city: ev.target.city.value,\n        line1: ev.target.address.value,\n        state: ev.target.state.value,\n        postal_code: ev.target.zip.value,\n      },\n    }\n\n    setProcessingTo(true)\n\n    const cardElement = elements.getElement('card')\n\n    try {\n      const { data: clientSecret } = await axios.post(\n        'https://gosavemore.herokuapp.com/checkout/',\n        {\n          amount: totalPrice * 100,\n        }\n      )\n\n      const paymentMethodReq = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n        billing_details: billingDetails,\n      })\n\n      if (paymentMethodReq.error) {\n        setCheckoutError(paymentMethodReq.error.message)\n        setProcessingTo(false)\n        return\n      }\n\n      const { error } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: paymentMethodReq.paymentMethod.id,\n      })\n\n      if (error) {\n        setCheckoutError(error.message)\n        setProcessingTo(false)\n        return\n      }\n\n      onSuccessfulCheckout()\n    } catch (err) {\n      setCheckoutError(err.message)\n    }\n  }\n\n  // Learning\n  // A common ask/bug that users run into is:\n  // How do you change the color of the card element input text?\n  // How do you change the font-size of the card element input text?\n  // How do you change the placeholder color?\n  // The answer to all of the above is to use the `style` option.\n  // It's common to hear users confused why the card element appears impervious\n  // to all their styles. No matter what classes they add to the parent element\n  // nothing within the card element seems to change. The reason for this is that\n  // the card element is housed within an iframe and:\n  // > styles do not cascade from a parent window down into its iframes\n\n  const iframeStyles = {\n    base: {\n      color: '#000',\n      fontSize: '16px',\n      iconColor: '#fff',\n      '::placeholder': {\n        color: '#87bbfd',\n      },\n    },\n    invalid: {\n      iconColor: '#000',\n      color: '#000',\n    },\n    complete: {\n      iconColor: '#000',\n    },\n  }\n\n  const cardElementOpts = {\n    iconStyle: 'solid',\n    style: iframeStyles,\n    hidePostalCode: true,\n  }\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <div>\n        <BillingDetailsFields />\n      </div>\n      <div>\n        <div>\n          <CardElement\n            options={cardElementOpts}\n            onChange={handleCardDetailsChange}\n          />\n        </div>\n      </div>\n      {checkoutError && <CheckoutError>{checkoutError}</CheckoutError>}\n      <div style={{ paddingTop: '20px' }}>\n        {/* TIP always disable your submit button while processing payments */}\n        <Button disabled={isProcessing || !stripe}>\n          {isProcessing ? 'Processing...' : `Pay $${totalPrice}`}\n        </Button>\n      </div>\n    </form>\n  )\n}\n\nexport default CheckoutForm\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}