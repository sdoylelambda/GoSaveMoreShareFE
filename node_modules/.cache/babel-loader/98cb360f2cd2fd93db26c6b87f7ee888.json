{"ast":null,"code":"import { types } from \"../actions/index\";\nconst {\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY\n} = types;\nconst initialState = {\n  items: [],\n  totalItems: 0,\n  totalPrice: 0\n};\n\nconst cartReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_TO_CART:\n      // if cart is empty add to cart\n      let data = { ...payload,\n        quantity: 1\n      };\n\n      if (state.items.length === 0) {\n        return { ...state,\n          items: state.items.concat(data),\n          totalItems: 1,\n          totalPrice: payload.price\n        };\n      } // if not equal then add item to cart\n      // if cart item id is equal to payload id just add quantity\n\n\n      let availableItem = state.items.find(item => item.id === payload.id);\n\n      if (!availableItem) {\n        return { ...state,\n          items: state.items.concat(data),\n          totalItems: state.totalItems += 1,\n          totalPrice: state.totalPrice += data.price\n        };\n      } else {\n        state.items.map(item => item.quantity += 1);\n        return { ...state,\n          totalItems: state.totalItems += 1,\n          totalPrice: state.totalPrice += data.price\n        };\n      }\n\n    case INCREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity += 1;\n          state.totalItems += 1;\n          state.totalPrice += item.price;\n        }\n      }\n\n      return state;\n\n    case DECREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          if (item.quantity === 0) {\n            item.quantity = 0;\n          } else {\n            item.quantity -= 1;\n            state.totalItems -= 1;\n            state.totalPrice -= item.price;\n          }\n        }\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/redux/reducers/cartReducer.js"],"names":["types","ADD_TO_CART","INCREMENT_ITEM_QUANTITY","DECREMENT_ITEM_QUANTITY","initialState","items","totalItems","totalPrice","cartReducer","state","type","payload","data","quantity","length","concat","price","availableItem","find","item","id","map"],"mappings":"AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,uBAAf;AAAwCC,EAAAA;AAAxC,IAAoEH,KAA1E;AACA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE,CAFO;AAGnBC,EAAAA,UAAU,EAAE;AAHO,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuB;AAAEM,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC/D,UAAQD,IAAR;AACE,SAAKT,WAAL;AACE;AACA,UAAIW,IAAI,GAAG,EACT,GAAGD,OADM;AAETE,QAAAA,QAAQ,EAAE;AAFD,OAAX;;AAKA,UAAIJ,KAAK,CAACJ,KAAN,CAAYS,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,eAAO,EACL,GAAGL,KADE;AAELJ,UAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,MAAZ,CAAmBH,IAAnB,CAFF;AAGLN,UAAAA,UAAU,EAAE,CAHP;AAILC,UAAAA,UAAU,EAAEI,OAAO,CAACK;AAJf,SAAP;AAMD,OAdH,CAeE;AAEA;;;AACA,UAAIC,aAAa,GAAGR,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,OAAO,CAACS,EAA/C,CAApB;;AACA,UAAI,CAACH,aAAL,EAAoB;AAClB,eAAO,EACL,GAAGR,KADE;AAELJ,UAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,MAAZ,CAAmBH,IAAnB,CAFF;AAGLN,UAAAA,UAAU,EAAGG,KAAK,CAACH,UAAN,IAAoB,CAH5B;AAILC,UAAAA,UAAU,EAAGE,KAAK,CAACF,UAAN,IAAoBK,IAAI,CAACI;AAJjC,SAAP;AAMD,OAPD,MAOO;AACLP,QAAAA,KAAK,CAACJ,KAAN,CAAYgB,GAAZ,CAAiBF,IAAD,IAAWA,IAAI,CAACN,QAAL,IAAiB,CAA5C;AACA,eAAO,EACL,GAAGJ,KADE;AAELH,UAAAA,UAAU,EAAGG,KAAK,CAACH,UAAN,IAAoB,CAF5B;AAGLC,UAAAA,UAAU,EAAGE,KAAK,CAACF,UAAN,IAAoBK,IAAI,CAACI;AAHjC,SAAP;AAKD;;AACH,SAAKd,uBAAL;AACE,WAAK,IAAIiB,IAAT,IAAiBV,KAAK,CAACJ,KAAvB,EAA8B;AAC5B,YAAIc,IAAI,CAACC,EAAL,KAAYT,OAAhB,EAAyB;AACvBQ,UAAAA,IAAI,CAACN,QAAL,IAAiB,CAAjB;AACAJ,UAAAA,KAAK,CAACH,UAAN,IAAoB,CAApB;AACAG,UAAAA,KAAK,CAACF,UAAN,IAAoBY,IAAI,CAACH,KAAzB;AACD;AACF;;AACD,aAAOP,KAAP;;AAEF,SAAKN,uBAAL;AACE,WAAK,IAAIgB,IAAT,IAAiBV,KAAK,CAACJ,KAAvB,EAA8B;AAC5B,YAAIc,IAAI,CAACC,EAAL,KAAYT,OAAhB,EAAyB;AACvB,cAAIQ,IAAI,CAACN,QAAL,KAAkB,CAAtB,EAAyB;AACvBM,YAAAA,IAAI,CAACN,QAAL,GAAgB,CAAhB;AACD,WAFD,MAEO;AACLM,YAAAA,IAAI,CAACN,QAAL,IAAiB,CAAjB;AACAJ,YAAAA,KAAK,CAACH,UAAN,IAAoB,CAApB;AACAG,YAAAA,KAAK,CAACF,UAAN,IAAoBY,IAAI,CAACH,KAAzB;AACD;AACF;AACF;;AACD,aAAOP,KAAP;;AAEF;AACE,aAAOA,KAAP;AA5DJ;AA8DD,CA/DD;;AAiEA,eAAeD,WAAf","sourcesContent":["import { types } from \"../actions/index\";\nconst { ADD_TO_CART, INCREMENT_ITEM_QUANTITY, DECREMENT_ITEM_QUANTITY } = types;\nconst initialState = {\n  items: [],\n  totalItems: 0,\n  totalPrice: 0,\n};\n\nconst cartReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_TO_CART:\n      // if cart is empty add to cart\n      let data = {\n        ...payload,\n        quantity: 1,\n      };\n\n      if (state.items.length === 0) {\n        return {\n          ...state,\n          items: state.items.concat(data),\n          totalItems: 1,\n          totalPrice: payload.price,\n        };\n      }\n      // if not equal then add item to cart\n\n      // if cart item id is equal to payload id just add quantity\n      let availableItem = state.items.find((item) => item.id === payload.id);\n      if (!availableItem) {\n        return {\n          ...state,\n          items: state.items.concat(data),\n          totalItems: (state.totalItems += 1),\n          totalPrice: (state.totalPrice += data.price),\n        };\n      } else {\n        state.items.map((item) => (item.quantity += 1));\n        return {\n          ...state,\n          totalItems: (state.totalItems += 1),\n          totalPrice: (state.totalPrice += data.price),\n        };\n      }\n    case INCREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity += 1;\n          state.totalItems += 1;\n          state.totalPrice += item.price;\n        }\n      }\n      return state;\n\n    case DECREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          if (item.quantity === 0) {\n            item.quantity = 0;\n          } else {\n            item.quantity -= 1;\n            state.totalItems -= 1;\n            state.totalPrice -= item.price;\n          }\n        }\n      }\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}