{"ast":null,"code":"import { types } from '../actions/index';\nconst {\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY,\n  CART_SAVE_ITEM_START,\n  CART_SAVE_ITEM_SUCCESS,\n  CART_SAVE_ITEM_FAIL,\n  GET_CART_START,\n  GET_CART_SUCCESS,\n  GET_CART_FAIL\n} = types;\nconst initialState = {\n  savedItems: [],\n  totalItems: 0,\n  totalPrice: 0,\n  isLoading: false\n};\n\nconst cartReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_TO_CART:\n      // if cart is empty add to cart\n      let data = { ...payload,\n        quantity: 1\n      };\n\n      if (state.savedItems.length === 0) {\n        return { ...state,\n          savedItems: state.savedItems.concat(data),\n          totalItems: 1,\n          totalPrice: payload.price\n        };\n      } // if not equal then add item to cart\n      // if cart item id is equal to payload id just add quantity\n\n\n      let availableItem = state.savedItems.find(item => item.id === payload.id);\n\n      if (!availableItem) {\n        return { ...state,\n          savedItems: state.savedItems.concat(data),\n          totalItems: state.totalItems += 1,\n          totalPrice: state.totalPrice += data.price\n        };\n      } else {\n        state.savedItems.filter(item => {\n          if (item.id === payload.id) {\n            item.quantity += 1;\n          }\n        });\n        return { ...state,\n          totalItems: state.totalItems += 1,\n          totalPrice: state.totalPrice += data.price\n        };\n      }\n\n    case INCREMENT_ITEM_QUANTITY:\n      for (let item of state.savedItems) {\n        if (item.id === payload) {\n          item.quantity += 1;\n          state.totalItems += 1;\n          state.totalPrice += item.price;\n        }\n      }\n\n      return state;\n\n    case DECREMENT_ITEM_QUANTITY:\n      for (let item of state.savedItems) {\n        if (item.id === payload) {\n          if (item.quantity === 0) {\n            item.quantity = 0;\n          } else {\n            item.quantity -= 1;\n            state.totalItems -= 1;\n            state.totalPrice -= item.price;\n          }\n        }\n      }\n\n      return state;\n\n    case CART_SAVE_ITEM_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case CART_SAVE_ITEM_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        savedItems: state.savedItems.concat(payload)\n      };\n\n    case CART_SAVE_ITEM_FAIL:\n      return { ...state,\n        err: payload\n      };\n\n    case GET_CART_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_CART_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        savedItems: payload\n      };\n\n    case GET_CART_FAIL:\n      return { ...state,\n        isLoading: false,\n        err: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/redux/reducers/cartReducer.js"],"names":["types","ADD_TO_CART","INCREMENT_ITEM_QUANTITY","DECREMENT_ITEM_QUANTITY","CART_SAVE_ITEM_START","CART_SAVE_ITEM_SUCCESS","CART_SAVE_ITEM_FAIL","GET_CART_START","GET_CART_SUCCESS","GET_CART_FAIL","initialState","savedItems","totalItems","totalPrice","isLoading","cartReducer","state","type","payload","data","quantity","length","concat","price","availableItem","find","item","id","filter","err"],"mappings":"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","sourcesContent":["import { types } from '../actions/index'\nconst {\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY,\n  CART_SAVE_ITEM_START,\n  CART_SAVE_ITEM_SUCCESS,\n  CART_SAVE_ITEM_FAIL,\n  GET_CART_START,\n  GET_CART_SUCCESS,\n  GET_CART_FAIL,\n} = types\nconst initialState = {\n  savedItems: [],\n  totalItems: 0,\n  totalPrice: 0,\n  isLoading: false,\n}\n\nconst cartReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_TO_CART:\n      // if cart is empty add to cart\n      let data = {\n        ...payload,\n        quantity: 1,\n      }\n\n      if (state.savedItems.length === 0) {\n        return {\n          ...state,\n          savedItems: state.savedItems.concat(data),\n          totalItems: 1,\n          totalPrice: payload.price,\n        }\n      }\n      // if not equal then add item to cart\n\n      // if cart item id is equal to payload id just add quantity\n      let availableItem = state.savedItems.find(\n        (item) => item.id === payload.id\n      )\n      if (!availableItem) {\n        return {\n          ...state,\n          savedItems: state.savedItems.concat(data),\n          totalItems: (state.totalItems += 1),\n          totalPrice: (state.totalPrice += data.price),\n        }\n      } else {\n        state.savedItems.filter((item) => {\n          if (item.id === payload.id) {\n            item.quantity += 1\n          }\n        })\n\n        return {\n          ...state,\n          totalItems: (state.totalItems += 1),\n          totalPrice: (state.totalPrice += data.price),\n        }\n      }\n    case INCREMENT_ITEM_QUANTITY:\n      for (let item of state.savedItems) {\n        if (item.id === payload) {\n          item.quantity += 1\n          state.totalItems += 1\n          state.totalPrice += item.price\n        }\n      }\n      return state\n\n    case DECREMENT_ITEM_QUANTITY:\n      for (let item of state.savedItems) {\n        if (item.id === payload) {\n          if (item.quantity === 0) {\n            item.quantity = 0\n          } else {\n            item.quantity -= 1\n            state.totalItems -= 1\n            state.totalPrice -= item.price\n          }\n        }\n      }\n      return state\n\n    case CART_SAVE_ITEM_START:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case CART_SAVE_ITEM_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        savedItems: state.savedItems.concat(payload),\n      }\n    case CART_SAVE_ITEM_FAIL:\n      return {\n        ...state,\n        err: payload,\n      }\n    case GET_CART_START:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case GET_CART_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        savedItems: payload,\n      }\n    case GET_CART_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        err: payload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default cartReducer\n"]},"metadata":{},"sourceType":"module"}