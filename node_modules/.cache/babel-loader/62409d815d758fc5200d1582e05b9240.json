{"ast":null,"code":"import { types } from '../actions/index';\nconst {\n  GET_PRODUCTS_START,\n  GET_PRODUCTS_SUCCESS,\n  GET_PRODUCTS_FAIL\n} = types;\nconst initialState = {\n  products: [],\n  err: '',\n  isLoading: false\n};\n\nconst productsReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case GET_PRODUCTS_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_PRODUCTS_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        allData: payload.data\n      };\n\n    case GET_PRODUCTS_FAIL:\n      return { ...state,\n        isLoading: false,\n        err: 'ERROR' // FIX FOR ERROR HANDLING\n\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default productsReducer;","map":{"version":3,"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/redux/reducers/productsReducer.js"],"names":["types","GET_PRODUCTS_START","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","initialState","products","err","isLoading","productsReducer","state","type","payload","allData","data"],"mappings":"AAAA,SAASA,KAAT,QAAsB,kBAAtB;AAEA,MAAM;AAAEC,EAAAA,kBAAF;AAAsBC,EAAAA,oBAAtB;AAA4CC,EAAAA;AAA5C,IAAkEH,KAAxE;AAEA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,GAAG,EAAE,EAFc;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuB;AAAEM,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AACnE,UAAQD,IAAR;AACE,SAAKT,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKL,oBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,SAAS,EAAE,KAFN;AAGLK,QAAAA,OAAO,EAAED,OAAO,CAACE;AAHZ,OAAP;;AAKF,SAAKV,iBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,SAAS,EAAE,KAFN;AAGLD,QAAAA,GAAG,EAAE,OAHA,CAGS;;AAHT,OAAP;;AAKF;AACE,aAAOG,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,eAAf","sourcesContent":["import { types } from '../actions/index'\n\nconst { GET_PRODUCTS_START, GET_PRODUCTS_SUCCESS, GET_PRODUCTS_FAIL } = types\n\nconst initialState = {\n  products: [],\n  err: '',\n  isLoading: false,\n}\n\nconst productsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case GET_PRODUCTS_START:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case GET_PRODUCTS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        allData: payload.data,\n      }\n    case GET_PRODUCTS_FAIL:\n      return {\n        ...state,\n        isLoading: false,\n        err: 'ERROR', // FIX FOR ERROR HANDLING\n      }\n    default:\n      return state\n  }\n}\n\nexport default productsReducer\n"]},"metadata":{},"sourceType":"module"}