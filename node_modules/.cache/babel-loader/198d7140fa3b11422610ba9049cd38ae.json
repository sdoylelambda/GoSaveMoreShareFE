{"ast":null,"code":"import { types } from \"../actions/index\";\nconst {\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY,\n  CART_SAVE_ITEM_START,\n  CART_SAVE_ITEM_SUCCESS,\n  CART_SAVE_ITEM_FAIL,\n  GET_CART_START,\n  GET_CART_SUCCESS,\n  GET_CART_FAIL\n} = types;\nconst initialState = {\n  items: [],\n  totalItems: 0,\n  totalPrice: 0,\n  isLoading: false,\n  err: \"\"\n};\n\nconst cartReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_TO_CART:\n      // if cart is empty add to cart\n      let data = { ...payload,\n        quantity: 1\n      };\n\n      if (state.items.length === 0) {\n        return { ...state,\n          items: state.items.concat(data),\n          totalItems: 1,\n          totalPrice: payload.price\n        };\n      } // if not equal then add item to cart\n      // if cart item id is equal to payload id just add quantity\n\n\n      let availableItem = state.items.find(item => item.id === payload.id);\n\n      if (!availableItem) {\n        return { ...state,\n          items: state.items.concat(data),\n          totalItems: state.totalItems += 1,\n          totalPrice: state.totalPrice += data.price\n        };\n      } else {\n        state.items.filter(item => {\n          if (item.id === payload.id) {\n            item.quantity += 1;\n          }\n        });\n        return { ...state,\n          totalItems: state.totalItems += 1,\n          totalPrice: state.totalPrice += data.price\n        };\n      }\n\n    case INCREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity += 1;\n          state.totalItems += 1;\n          state.totalPrice += item.price;\n        }\n      }\n\n      return state;\n\n    case DECREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          if (item.quantity === 0) {\n            item.quantity = 0;\n          } else {\n            item.quantity -= 1;\n            state.totalItems -= 1;\n            state.totalPrice -= item.price;\n          }\n        }\n      }\n\n      return state;\n\n    case CART_SAVE_ITEM_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case CART_SAVE_ITEM_SUCCESS:\n      return { ...state,\n        isLoading: false\n      };\n\n    case CART_SAVE_ITEM_FAIL:\n      return { ...state,\n        err: payload\n      };\n\n    case GET_CART_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_CART_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        items: [...state.items, ...payload]\n      };\n\n    case GET_CART_FAIL:\n      return { ...state,\n        err: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/redux/reducers/cartReducer.js"],"names":["types","ADD_TO_CART","INCREMENT_ITEM_QUANTITY","DECREMENT_ITEM_QUANTITY","CART_SAVE_ITEM_START","CART_SAVE_ITEM_SUCCESS","CART_SAVE_ITEM_FAIL","GET_CART_START","GET_CART_SUCCESS","GET_CART_FAIL","initialState","items","totalItems","totalPrice","isLoading","err","cartReducer","state","type","payload","data","quantity","length","concat","price","availableItem","find","item","id","filter"],"mappings":"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","sourcesContent":["import { types } from \"../actions/index\";\nconst {\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY,\n  CART_SAVE_ITEM_START,\n  CART_SAVE_ITEM_SUCCESS,\n  CART_SAVE_ITEM_FAIL,\n  GET_CART_START,\n  GET_CART_SUCCESS,\n  GET_CART_FAIL,\n} = types;\nconst initialState = {\n  items: [],\n  totalItems: 0,\n  totalPrice: 0,\n  isLoading: false,\n  err: \"\",\n};\n\nconst cartReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_TO_CART:\n      // if cart is empty add to cart\n      let data = {\n        ...payload,\n        quantity: 1,\n      };\n\n      if (state.items.length === 0) {\n        return {\n          ...state,\n          items: state.items.concat(data),\n          totalItems: 1,\n          totalPrice: payload.price,\n        };\n      }\n      // if not equal then add item to cart\n\n      // if cart item id is equal to payload id just add quantity\n      let availableItem = state.items.find((item) => item.id === payload.id);\n      if (!availableItem) {\n        return {\n          ...state,\n          items: state.items.concat(data),\n          totalItems: (state.totalItems += 1),\n          totalPrice: (state.totalPrice += data.price),\n        };\n      } else {\n        state.items.filter((item) => {\n          if (item.id === payload.id) {\n            item.quantity += 1;\n          }\n        });\n\n        return {\n          ...state,\n          totalItems: (state.totalItems += 1),\n          totalPrice: (state.totalPrice += data.price),\n        };\n      }\n    case INCREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity += 1;\n          state.totalItems += 1;\n          state.totalPrice += item.price;\n        }\n      }\n      return state;\n\n    case DECREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          if (item.quantity === 0) {\n            item.quantity = 0;\n          } else {\n            item.quantity -= 1;\n            state.totalItems -= 1;\n            state.totalPrice -= item.price;\n          }\n        }\n      }\n      return state;\n\n    case CART_SAVE_ITEM_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case CART_SAVE_ITEM_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case CART_SAVE_ITEM_FAIL:\n      return {\n        ...state,\n        err: payload,\n      };\n\n    case GET_CART_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case GET_CART_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        items: [...state.items, ...payload],\n      };\n\n    case GET_CART_FAIL:\n      return {\n        ...state,\n        err: payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}