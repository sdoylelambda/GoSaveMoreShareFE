{"ast":null,"code":"import axiosRoute from \"../util/axiosRoute\";\nimport { types } from \"./index\";\nconst {\n  GET_CART_START,\n  GET_CART_SUCCESS,\n  GET_CART_FAIL,\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY,\n  CART_SAVE_ITEM_START,\n  CART_SAVE_ITEM_SUCCESS,\n  CART_SAVE_ITEM_FAIL\n} = types;\nexport const getCart = () => async dispatch => {\n  dispatch({\n    type: GET_CART_START\n  });\n\n  try {\n    const id = 1; // fix\n\n    const res = await axiosRoute().get(`/cart/${id}`);\n    dispatch({\n      type: GET_CART_SUCCESS,\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    dispatch({\n      type: GET_CART_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const addToCart = product => async dispatch => {\n  dispatch({\n    type: ADD_TO_CART,\n    payload: product\n  });\n};\nexport const addItemQuantity = id => async dispatch => {\n  dispatch({\n    type: INCREMENT_ITEM_QUANTITY,\n    payload: id\n  });\n};\nexport const decreaseItemQuantity = id => async dispatch => {\n  dispatch({\n    type: DECREMENT_ITEM_QUANTITY,\n    payload: id\n  });\n};\nexport const saveCart = data => async dispatch => {\n  dispatch({\n    type: CART_SAVE_ITEM_START\n  });\n  console.log(\"this is the data\", data);\n\n  try {\n    const res = await axiosRoute().post(\"/cart\", data);\n    dispatch({\n      type: CART_SAVE_ITEM_SUCCESS,\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    dispatch({\n      type: CART_SAVE_ITEM_FAIL,\n      payload: err.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/redux/actions/cartActions.js"],"names":["axiosRoute","types","GET_CART_START","GET_CART_SUCCESS","GET_CART_FAIL","ADD_TO_CART","INCREMENT_ITEM_QUANTITY","DECREMENT_ITEM_QUANTITY","CART_SAVE_ITEM_START","CART_SAVE_ITEM_SUCCESS","CART_SAVE_ITEM_FAIL","getCart","dispatch","type","id","res","get","payload","data","err","message","addToCart","product","addItemQuantity","decreaseItemQuantity","saveCart","console","log","post"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,oBAAvB;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,MAAM;AACJC,EAAAA,cADI;AAEJC,EAAAA,gBAFI;AAGJC,EAAAA,aAHI;AAIJC,EAAAA,WAJI;AAKJC,EAAAA,uBALI;AAMJC,EAAAA,uBANI;AAOJC,EAAAA,oBAPI;AAQJC,EAAAA,sBARI;AASJC,EAAAA;AATI,IAUFT,KAVJ;AAYA,OAAO,MAAMU,OAAO,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC/CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAD,CAAR;;AACA,MAAI;AACF,UAAMY,EAAE,GAAG,CAAX,CADE,CACY;;AACd,UAAMC,GAAG,GAAG,MAAMf,UAAU,GAAGgB,GAAb,CAAkB,SAAQF,EAAG,EAA7B,CAAlB;AACAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,gBAAR;AAA0Bc,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAAvC,KAAD,CAAR;AACA,WAAOH,GAAP;AACD,GALD,CAKE,OAAOI,GAAP,EAAY;AACZP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET,aAAR;AAAuBa,MAAAA,OAAO,EAAEE,GAAG,CAACC;AAApC,KAAD,CAAR;AACD;AACF,CAVM;AAYP,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa,MAAOV,QAAP,IAAoB;AACxDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER,WAAR;AAAqBY,IAAAA,OAAO,EAAEK;AAA9B,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMC,eAAe,GAAIT,EAAD,IAAQ,MAAOF,QAAP,IAAoB;AACzDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,uBAAR;AAAiCW,IAAAA,OAAO,EAAEH;AAA1C,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMU,oBAAoB,GAAIV,EAAD,IAAQ,MAAOF,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN,uBAAR;AAAiCU,IAAAA,OAAO,EAAEH;AAA1C,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMW,QAAQ,GAAIP,IAAD,IAAU,MAAON,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCT,IAAhC;;AACA,MAAI;AACF,UAAMH,GAAG,GAAG,MAAMf,UAAU,GAAG4B,IAAb,CAAkB,OAAlB,EAA2BV,IAA3B,CAAlB;AACAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,sBAAR;AAAgCQ,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAA7C,KAAD,CAAR;AACA,WAAOH,GAAP;AACD,GAJD,CAIE,OAAOI,GAAP,EAAY;AACZP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,mBAAR;AAA6BO,MAAAA,OAAO,EAAEE,GAAG,CAACC;AAA1C,KAAD,CAAR;AACD;AACF,CAVM","sourcesContent":["import axiosRoute from \"../util/axiosRoute\";\nimport { types } from \"./index\";\n\nconst {\n  GET_CART_START,\n  GET_CART_SUCCESS,\n  GET_CART_FAIL,\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY,\n  CART_SAVE_ITEM_START,\n  CART_SAVE_ITEM_SUCCESS,\n  CART_SAVE_ITEM_FAIL,\n} = types;\n\nexport const getCart = () => async (dispatch) => {\n  dispatch({ type: GET_CART_START });\n  try {\n    const id = 1; // fix\n    const res = await axiosRoute().get(`/cart/${id}`);\n    dispatch({ type: GET_CART_SUCCESS, payload: res.data });\n    return res;\n  } catch (err) {\n    dispatch({ type: GET_CART_FAIL, payload: err.message });\n  }\n};\n\nexport const addToCart = (product) => async (dispatch) => {\n  dispatch({ type: ADD_TO_CART, payload: product });\n};\n\nexport const addItemQuantity = (id) => async (dispatch) => {\n  dispatch({ type: INCREMENT_ITEM_QUANTITY, payload: id });\n};\n\nexport const decreaseItemQuantity = (id) => async (dispatch) => {\n  dispatch({ type: DECREMENT_ITEM_QUANTITY, payload: id });\n};\n\nexport const saveCart = (data) => async (dispatch) => {\n  dispatch({ type: CART_SAVE_ITEM_START });\n  console.log(\"this is the data\", data);\n  try {\n    const res = await axiosRoute().post(\"/cart\", data);\n    dispatch({ type: CART_SAVE_ITEM_SUCCESS, payload: res.data });\n    return res;\n  } catch (err) {\n    dispatch({ type: CART_SAVE_ITEM_FAIL, payload: err.message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}