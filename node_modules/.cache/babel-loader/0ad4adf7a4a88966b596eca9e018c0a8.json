{"ast":null,"code":"var _jsxFileName = \"/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/components/CartList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCart } from '../redux/actions/cartActions';\nimport CartCart from './CartCard';\n\nconst CartList = () => {\n  // get shopping cart data from redux-store\n  const cartData = useSelector(state => state.cart); // DISPLAY DATA BELOW ===>>>\n\n  console.log('cart data::::============>', cartData); // const dispatch = useDispatch()\n  // useEffect(() => {\n  //   dispatch(getCart())\n  // }, [dispatch])\n\n  const {\n    productName,\n    price,\n    shortDescription,\n    description,\n    stock\n  } = cartData;\n  console.log('p!!!!!!!!!!!!!!!!', cartData.items);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Your Shopping Cart\"), cartData.items.map(product => {\n    return /*#__PURE__*/React.createElement(CartCart, {\n      key: product.id,\n      product: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }\n    });\n  }));\n};\n\nexport default CartList; // FOR FUN\n// MAKE CART VERY SECURE USING SHA256\n// PLAN\n// CREATE UNIQUE TOKEN FOR EACH CART ITEM WHEN ADDED TO CART\n// STORE TOKEN ON BE UNDER THAT USER\n// WHEN ACCESSING CART, CHECK TO SEE IF TOKEN IS AVAILABLE FOR EACH ITEM\n// IF NO DISPLAY IT, IF NOT, DO NOT DISPLAY","map":{"version":3,"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/components/CartList.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getCart","CartCart","CartList","cartData","state","cart","console","log","productName","price","shortDescription","description","stock","items","map","product","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA5B,CAFqB,CAIrB;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CJ,QAA1C,EALqB,CAMrB;AAEA;AACA;AACA;;AAEA,QAAM;AAAEK,IAAAA,WAAF;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,gBAAtB;AAAwCC,IAAAA,WAAxC;AAAqDC,IAAAA;AAArD,MAA+DT,QAArE;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,QAAQ,CAACU,KAA1C;AAEA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGV,QAAQ,CAACU,KAAT,CAAeC,GAAf,CAAoBC,OAAD,IAAa;AAC/B,wBAAO,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAvB;AAA2B,MAAA,OAAO,EAAED,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CAFH,CADF;AAQD,CAxBD;;AA0BA,eAAeb,QAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getCart } from '../redux/actions/cartActions'\nimport CartCart from './CartCard'\n\nconst CartList = () => {\n  // get shopping cart data from redux-store\n  const cartData = useSelector((state) => state.cart)\n\n  // DISPLAY DATA BELOW ===>>>\n  console.log('cart data::::============>', cartData)\n  // const dispatch = useDispatch()\n\n  // useEffect(() => {\n  //   dispatch(getCart())\n  // }, [dispatch])\n\n  const { productName, price, shortDescription, description, stock } = cartData\n\n  console.log('p!!!!!!!!!!!!!!!!', cartData.items)\n\n  return (\n    <>\n      <h3>Your Shopping Cart</h3>\n      {cartData.items.map((product) => {\n        return <CartCart key={product.id} product={product} />\n      })}\n    </>\n  )\n}\n\nexport default CartList\n\n// FOR FUN\n// MAKE CART VERY SECURE USING SHA256\n\n// PLAN\n// CREATE UNIQUE TOKEN FOR EACH CART ITEM WHEN ADDED TO CART\n// STORE TOKEN ON BE UNDER THAT USER\n// WHEN ACCESSING CART, CHECK TO SEE IF TOKEN IS AVAILABLE FOR EACH ITEM\n// IF NO DISPLAY IT, IF NOT, DO NOT DISPLAY\n"]},"metadata":{},"sourceType":"module"}