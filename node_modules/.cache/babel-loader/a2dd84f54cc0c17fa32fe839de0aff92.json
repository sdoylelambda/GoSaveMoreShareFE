{"ast":null,"code":"import SaveForLater from \"../../components/SaveForLater\";\nimport { types } from \"../actions/index\";\nconst {\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY,\n  RESET_ITEM_QUANTITY,\n  CART_SAVE_ITEM_START,\n  CART_SAVE_ITEM_SUCCESS,\n  CART_SAVE_ITEM_FAIL,\n  GET_CART_START,\n  GET_CART_SUCCESS,\n  GET_CART_FAIL\n} = types;\nconst initialState = {\n  items: [],\n  isLoading: false,\n  err: \"\",\n  totalItems: 0\n};\n\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case ADD_TO_CART:\n      // if cart is empty add to cart\n      let data = { ...payload,\n        quantity: 1\n      };\n\n      if (state.items.length === 0) {\n        return { ...state,\n          items: state.items.concat(data),\n          totalItems: 1\n        };\n      } // if not equal then add item to cart\n      // if cart item id is equal to payload id just add quantity\n\n\n      let availableItem = state.items.find(item => item.id === payload.id);\n\n      if (!availableItem) {\n        return { ...state,\n          items: state.items.concat(data),\n          totalItems: state.totalItems += 1\n        };\n      } else {\n        state.items.filter(item => {\n          if (item.id === payload.id) {\n            item.quantity += 1;\n          }\n        });\n        return { ...state,\n          totalItems: state.totalItems += 1\n        };\n      }\n\n    case CART_SAVE_ITEM_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case CART_SAVE_ITEM_SUCCESS:\n      return { ...state,\n        isLoading: false\n      };\n\n    case CART_SAVE_ITEM_FAIL:\n      return { ...state,\n        err: payload\n      };\n\n    case GET_CART_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_CART_SUCCESS:\n      // update the payload, if the payload is not in the cart items then push it to the items\n      // if not then just increase the quantity in the store.\n      let tallyTotalItems = 0;\n      payload.map(item => tallyTotalItems += item.quantity);\n      return { ...state,\n        isLoading: false,\n        items: [...state.items, ...payload],\n        totalItems: tallyTotalItems\n      };\n\n    case GET_CART_FAIL:\n      return { ...state,\n        err: payload\n      };\n\n    case INCREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity += 1;\n          state.totalItems += 1;\n        }\n      }\n\n      return state;\n\n    case DECREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity -= 1;\n          state.totalItems -= 1;\n        }\n\n        if (item.quantity === 0) {\n          return { ...state,\n            items: state.items.filter(x => x.id !== payload)\n          };\n        }\n      }\n\n      return state;\n\n    case RESET_ITEM_QUANTITY:\n      return {\n        items: [],\n        isLoading: false,\n        err: \"\",\n        totalItems: 0\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"names":["SaveForLater","types","ADD_TO_CART","INCREMENT_ITEM_QUANTITY","DECREMENT_ITEM_QUANTITY","RESET_ITEM_QUANTITY","CART_SAVE_ITEM_START","CART_SAVE_ITEM_SUCCESS","CART_SAVE_ITEM_FAIL","GET_CART_START","GET_CART_SUCCESS","GET_CART_FAIL","initialState","items","isLoading","err","totalItems","cartReducer","state","type","payload","data","quantity","length","concat","availableItem","find","item","id","filter","tallyTotalItems","map","x"],"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/redux/reducers/cartReducer.js"],"sourcesContent":["import SaveForLater from \"../../components/SaveForLater\";\nimport { types } from \"../actions/index\";\nconst {\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY,\n  RESET_ITEM_QUANTITY,\n  CART_SAVE_ITEM_START,\n  CART_SAVE_ITEM_SUCCESS,\n  CART_SAVE_ITEM_FAIL,\n  GET_CART_START,\n  GET_CART_SUCCESS,\n  GET_CART_FAIL,\n} = types;\nconst initialState = {\n  items: [],\n  isLoading: false,\n  err: \"\",\n  totalItems: 0,\n};\n\nconst cartReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_TO_CART:\n      // if cart is empty add to cart\n      let data = {\n        ...payload,\n        quantity: 1,\n      };\n\n      if (state.items.length === 0) {\n        return {\n          ...state,\n          items: state.items.concat(data),\n          totalItems: 1,\n        };\n      }\n      // if not equal then add item to cart\n      // if cart item id is equal to payload id just add quantity\n      let availableItem = state.items.find((item) => item.id === payload.id);\n      if (!availableItem) {\n        return {\n          ...state,\n          items: state.items.concat(data),\n          totalItems: (state.totalItems += 1),\n        };\n      } else {\n        state.items.filter((item) => {\n          if (item.id === payload.id) {\n            item.quantity += 1;\n          }\n        });\n\n        return {\n          ...state,\n          totalItems: (state.totalItems += 1),\n        };\n      }\n\n    case CART_SAVE_ITEM_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case CART_SAVE_ITEM_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case CART_SAVE_ITEM_FAIL:\n      return {\n        ...state,\n        err: payload,\n      };\n\n    case GET_CART_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case GET_CART_SUCCESS:\n      // update the payload, if the payload is not in the cart items then push it to the items\n      // if not then just increase the quantity in the store.\n      let tallyTotalItems = 0;\n      payload.map((item) => (tallyTotalItems += item.quantity));\n\n      return {\n        ...state,\n        isLoading: false,\n        items: [...state.items, ...payload],\n        totalItems: tallyTotalItems,\n      };\n\n    case GET_CART_FAIL:\n      return {\n        ...state,\n        err: payload,\n      };\n\n    case INCREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity += 1;\n          state.totalItems += 1;\n        }\n      }\n      return state;\n\n    case DECREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity -= 1;\n          state.totalItems -= 1;\n        }\n\n        if (item.quantity === 0) {\n          return {\n            ...state,\n            items: state.items.filter((x) => x.id !== payload),\n          };\n        }\n      }\n      return state;\n\n    case RESET_ITEM_QUANTITY:\n      return {\n        items: [],\n        isLoading: false,\n        err: \"\",\n        totalItems: 0,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}