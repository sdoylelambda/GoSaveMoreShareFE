{"ast":null,"code":"import SaveForLater from \"../../components/SaveForLater\";\nimport { types } from \"../actions/index\";\nconst {\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY,\n  RESET_ITEM_QUANTITY,\n  CART_SAVE_ITEM_START,\n  CART_SAVE_ITEM_SUCCESS,\n  CART_SAVE_ITEM_FAIL,\n  GET_CART_START,\n  GET_CART_SUCCESS,\n  GET_CART_FAIL\n} = types;\nconst initialState = {\n  items: [],\n  isLoading: false,\n  err: \"\",\n  totalItems: 0\n};\n\nconst cartReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case ADD_TO_CART:\n      // if cart is empty add to cart\n      let data = { ...payload,\n        quantity: 1\n      };\n\n      if (state.items.length === 0) {\n        return { ...state,\n          items: state.items.concat(data),\n          totalItems: 1\n        };\n      } // if not equal then add item to cart\n      // if cart item id is equal to payload id just add quantity\n\n\n      let availableItem = state.items.find(item => item.id === payload.id);\n\n      if (!availableItem) {\n        return { ...state,\n          items: state.items.concat(data),\n          totalItems: state.totalItems += 1\n        };\n      } else {\n        state.items.filter(item => {\n          if (item.id === payload.id) {\n            item.quantity += 1;\n          }\n        });\n        return { ...state,\n          totalItems: state.totalItems += 1\n        };\n      }\n\n    case CART_SAVE_ITEM_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case CART_SAVE_ITEM_SUCCESS:\n      return { ...state,\n        isLoading: false\n      };\n\n    case CART_SAVE_ITEM_FAIL:\n      return { ...state,\n        err: payload\n      };\n\n    case GET_CART_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case GET_CART_SUCCESS:\n      // update the payload, if the payload is not in the cart items then push it to the items\n      // if not then just increase the quantity in the store.\n      let tallyTotalItems = 0;\n      payload.map(item => tallyTotalItems += item.quantity);\n      return { ...state,\n        isLoading: false,\n        items: [...state.items, ...payload],\n        totalItems: tallyTotalItems\n      };\n\n    case GET_CART_FAIL:\n      return { ...state,\n        err: payload\n      };\n\n    case INCREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity += 1;\n          state.totalItems += 1;\n        }\n      }\n\n      return state;\n\n    case DECREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity -= 1;\n          state.totalItems -= 1;\n        }\n\n        if (item.quantity === 0) {\n          return { ...state,\n            items: state.items.filter(x => x.id !== payload)\n          };\n        }\n      }\n\n      return state;\n\n    case RESET_ITEM_QUANTITY:\n      return {\n        items: [],\n        isLoading: false,\n        err: \"\",\n        totalItems: 0\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/redux/reducers/cartReducer.js"],"names":["SaveForLater","types","ADD_TO_CART","INCREMENT_ITEM_QUANTITY","DECREMENT_ITEM_QUANTITY","RESET_ITEM_QUANTITY","CART_SAVE_ITEM_START","CART_SAVE_ITEM_SUCCESS","CART_SAVE_ITEM_FAIL","GET_CART_START","GET_CART_SUCCESS","GET_CART_FAIL","initialState","items","isLoading","err","totalItems","cartReducer","state","type","payload","data","quantity","length","concat","availableItem","find","item","id","filter","tallyTotalItems","map","x"],"mappings":"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","sourcesContent":["import SaveForLater from \"../../components/SaveForLater\";\nimport { types } from \"../actions/index\";\nconst {\n  ADD_TO_CART,\n  INCREMENT_ITEM_QUANTITY,\n  DECREMENT_ITEM_QUANTITY,\n  RESET_ITEM_QUANTITY,\n  CART_SAVE_ITEM_START,\n  CART_SAVE_ITEM_SUCCESS,\n  CART_SAVE_ITEM_FAIL,\n  GET_CART_START,\n  GET_CART_SUCCESS,\n  GET_CART_FAIL,\n} = types;\nconst initialState = {\n  items: [],\n  isLoading: false,\n  err: \"\",\n  totalItems: 0,\n};\n\nconst cartReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ADD_TO_CART:\n      // if cart is empty add to cart\n      let data = {\n        ...payload,\n        quantity: 1,\n      };\n\n      if (state.items.length === 0) {\n        return {\n          ...state,\n          items: state.items.concat(data),\n          totalItems: 1,\n        };\n      }\n      // if not equal then add item to cart\n      // if cart item id is equal to payload id just add quantity\n      let availableItem = state.items.find((item) => item.id === payload.id);\n      if (!availableItem) {\n        return {\n          ...state,\n          items: state.items.concat(data),\n          totalItems: (state.totalItems += 1),\n        };\n      } else {\n        state.items.filter((item) => {\n          if (item.id === payload.id) {\n            item.quantity += 1;\n          }\n        });\n\n        return {\n          ...state,\n          totalItems: (state.totalItems += 1),\n        };\n      }\n\n    case CART_SAVE_ITEM_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case CART_SAVE_ITEM_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case CART_SAVE_ITEM_FAIL:\n      return {\n        ...state,\n        err: payload,\n      };\n\n    case GET_CART_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case GET_CART_SUCCESS:\n      // update the payload, if the payload is not in the cart items then push it to the items\n      // if not then just increase the quantity in the store.\n      let tallyTotalItems = 0;\n      payload.map((item) => (tallyTotalItems += item.quantity));\n\n      return {\n        ...state,\n        isLoading: false,\n        items: [...state.items, ...payload],\n        totalItems: tallyTotalItems,\n      };\n\n    case GET_CART_FAIL:\n      return {\n        ...state,\n        err: payload,\n      };\n\n    case INCREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity += 1;\n          state.totalItems += 1;\n        }\n      }\n      return state;\n\n    case DECREMENT_ITEM_QUANTITY:\n      for (let item of state.items) {\n        if (item.id === payload) {\n          item.quantity -= 1;\n          state.totalItems -= 1;\n        }\n\n        if (item.quantity === 0) {\n          return {\n            ...state,\n            items: state.items.filter((x) => x.id !== payload),\n          };\n        }\n      }\n      return state;\n\n    case RESET_ITEM_QUANTITY:\n      return {\n        items: [],\n        isLoading: false,\n        err: \"\",\n        totalItems: 0,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}