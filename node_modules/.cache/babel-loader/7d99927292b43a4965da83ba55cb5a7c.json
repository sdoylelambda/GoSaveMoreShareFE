{"ast":null,"code":"// import axiosWithAuth from \"../util/axiosWithAuth\";\nimport { types } from './index';\nimport axiosRoute from '../util/axiosRoute';\nimport axios from 'axios';\nconst {\n  GET_INDIVIDUAL_PRODUCT_START,\n  GET_INDIVIDUAL_PRODUCT_SUCCESS,\n  GET_INDIVIDUAL_PRODUCT_FAIL,\n  GET_PRODUCTS_START,\n  GET_PRODUCTS_SUCCESS,\n  GET_PRODUCTS_FAIL,\n  ADD_PRODUCTS_START,\n  ADD_PRODUCTS_SUCCESS,\n  ADD_PRODUCTS_FAIL,\n  EDIT_PRODUCTS_START,\n  EDIT_PRODUCTS_SUCCESS,\n  EDIT_PRODUCTS_FAIL\n} = types;\nexport const getProduct = productName => async dispatch => {\n  dispatch({\n    type: GET_INDIVIDUAL_PRODUCT_START\n  });\n\n  try {\n    const res = axiosRoute();\n    console.log('single item get:', res.data).get(`/product/${productName}`).dispatch({\n      type: GET_INDIVIDUAL_PRODUCT_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_INDIVIDUAL_PRODUCT_FAIL,\n      payload: err\n    });\n  }\n};\nexport const getProducts = () => async dispatch => {\n  dispatch({\n    type: GET_PRODUCTS_START\n  });\n\n  try {\n    const res = await axiosRoute().get('/products');\n    dispatch({\n      type: GET_PRODUCTS_SUCCESS,\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    dispatch({\n      type: GET_PRODUCTS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const addProducts = newProduct => async dispatch => {\n  dispatch({\n    type: ADD_PRODUCTS_START\n  });\n\n  try {\n    const res = await axiosRoute().post('/products/addProduct', newProduct);\n    console.log('res');\n    dispatch({\n      type: ADD_PRODUCTS_SUCCESS,\n      payload: res.data\n    });\n    return res;\n  } catch (err) {\n    dispatch({\n      type: ADD_PRODUCTS_FAIL,\n      payload: err.message\n    });\n  }\n};\nexport const editProducts = (productName, updatedData) => dispatch => {\n  dispatch({\n    type: EDIT_PRODUCTS_START\n  }); // try {\n  //   const res = await axiosRoute().put(`/products/${productName}`, updatedData)\n  //   dispatch({ type: EDIT_PRODUCTS_SUCCESS, payload: res.data })\n  //   return res\n  // } catch (err) {\n  //   dispatch({ type: EDIT_PRODUCTS_FAIL, payload: err.message })\n  // }\n\n  axios.put(`https://gosavemore.herokuapp.com/products/:${productName}`, updatedData).then(res => console.log('this is the res', res));\n};","map":{"version":3,"sources":["/Users/lambda_school_loaner_18/Desktop/Sean/React Native/goSaveMore/goSaveMore-FE/gsm-frontend/src/redux/actions/productsActions.js"],"names":["types","axiosRoute","axios","GET_INDIVIDUAL_PRODUCT_START","GET_INDIVIDUAL_PRODUCT_SUCCESS","GET_INDIVIDUAL_PRODUCT_FAIL","GET_PRODUCTS_START","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","ADD_PRODUCTS_START","ADD_PRODUCTS_SUCCESS","ADD_PRODUCTS_FAIL","EDIT_PRODUCTS_START","EDIT_PRODUCTS_SUCCESS","EDIT_PRODUCTS_FAIL","getProduct","productName","dispatch","type","res","console","log","data","get","payload","err","getProducts","message","addProducts","newProduct","post","editProducts","updatedData","put","then"],"mappings":"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","sourcesContent":["// import axiosWithAuth from \"../util/axiosWithAuth\";\nimport { types } from './index'\nimport axiosRoute from '../util/axiosRoute'\nimport axios from 'axios'\n\nconst {\n  GET_INDIVIDUAL_PRODUCT_START,\n  GET_INDIVIDUAL_PRODUCT_SUCCESS,\n  GET_INDIVIDUAL_PRODUCT_FAIL,\n  GET_PRODUCTS_START,\n  GET_PRODUCTS_SUCCESS,\n  GET_PRODUCTS_FAIL,\n  ADD_PRODUCTS_START,\n  ADD_PRODUCTS_SUCCESS,\n  ADD_PRODUCTS_FAIL,\n  EDIT_PRODUCTS_START,\n  EDIT_PRODUCTS_SUCCESS,\n  EDIT_PRODUCTS_FAIL,\n} = types\n\nexport const getProduct = (productName) => async (dispatch) => {\n  dispatch({ type: GET_INDIVIDUAL_PRODUCT_START })\n  try {\n    const res = axiosRoute()\n    console\n      .log('single item get:', res.data)\n      .get(`/product/${productName}`)\n      .dispatch({ type: GET_INDIVIDUAL_PRODUCT_SUCCESS, payload: res.data })\n  } catch (err) {\n    dispatch({ type: GET_INDIVIDUAL_PRODUCT_FAIL, payload: err })\n  }\n}\n\nexport const getProducts = () => async (dispatch) => {\n  dispatch({ type: GET_PRODUCTS_START })\n  try {\n    const res = await axiosRoute().get('/products')\n    dispatch({ type: GET_PRODUCTS_SUCCESS, payload: res.data })\n    return res\n  } catch (err) {\n    dispatch({ type: GET_PRODUCTS_FAIL, payload: err.message })\n  }\n}\n\nexport const addProducts = (newProduct) => async (dispatch) => {\n  dispatch({ type: ADD_PRODUCTS_START })\n  try {\n    const res = await axiosRoute().post('/products/addProduct', newProduct)\n    console.log('res')\n    dispatch({ type: ADD_PRODUCTS_SUCCESS, payload: res.data })\n    return res\n  } catch (err) {\n    dispatch({ type: ADD_PRODUCTS_FAIL, payload: err.message })\n  }\n}\n\nexport const editProducts = (productName, updatedData) => (dispatch) => {\n  dispatch({ type: EDIT_PRODUCTS_START })\n  // try {\n  //   const res = await axiosRoute().put(`/products/${productName}`, updatedData)\n  //   dispatch({ type: EDIT_PRODUCTS_SUCCESS, payload: res.data })\n  //   return res\n  // } catch (err) {\n  //   dispatch({ type: EDIT_PRODUCTS_FAIL, payload: err.message })\n  // }\n  axios\n    .put(\n      `https://gosavemore.herokuapp.com/products/:${productName}`,\n      updatedData\n    )\n    .then((res) => console.log('this is the res', res))\n}\n"]},"metadata":{},"sourceType":"module"}